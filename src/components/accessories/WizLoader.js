/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useThree } from "@react-three/fiber";
import { useFrame } from "@react-three/fiber";
export default function WizLoader(props) {
  const deg2rad = (degrees) => degrees * (Math.PI / 180);
  useThree(({ camera }) => {
    camera.rotation.set(deg2rad(50), 5, 0);
  });
  useFrame(({ clock }) => {
    const a = clock.getElapsedTime();
    group.current.rotation.y = a / 2;
  });
  const group = useRef();
  const { nodes, materials } = useGLTF("/wizard.glb");
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["4"].geometry}
        material={materials.palette}
      />
    </group>
  );
}

useGLTF.preload("/wizard.glb");
